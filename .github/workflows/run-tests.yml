name: "Unit tests"

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-18.04
    continue-on-error: ${{ matrix.experimental }} # Experimental builds may fail

    defaults:
      run:
        shell: bash -l -e -o pipefail {0}

    env:
      WSI_CONDA_CHANNEL: "https://dnap.cog.sanger.ac.uk/npg/conda/devel/generic"
      CONDA_ENV: "testenv"
      PERL_CACHE: ~/perl5

    strategy:
      matrix:
        perl: [ "5.22.4" ]
        baton: [ "2.1.0" ]
        experimental: [ false ]
        include:
          - irods: "4.2.7"
            server_image: "wsinpg/ub-16.04-irods-4.2.7:latest"
            plugins: "201712+irods_4.2.7"
            experimental: false
          - irods: "4.2.8"
            plugins: "201712+irods_4.2.8"
            server_image: "wsinpg/ub-18.04-irods-4.2.8:latest"
            experimental: true

    services:
      irods:
        image: ${{ matrix.server_image }}
        ports:
          - 1247:1247
          - 20000-20199:20000-20199

    steps:
      - uses: actions/checkout@v2

      - name: "Install OS dependencies"
        run: |
          sudo apt-get install -qq uuid-dev    # For Perl UUID module
          sudo apt-get install -qq libgd-dev   # For npg_tracking
          sudo apt-get install -qq liblzma-dev # For npg_qc
          sudo apt-get install -qq pigz        # for BioNano run publication in npg_irods

      - name: "Initialize Miniconda"
        run: |
          echo 'source $CONDA/etc/profile.d/conda.sh' >> "$HOME/.bash_profile"

      - name: "Cache Miniconda"
        id: cache-miniconda
        uses: actions/cache@v2
        with:
          path: |
            ~/conda/pkgs
            ~/conda/envs
          key: ${{ runner.os }}-miniconda

      - name: "Configure Miniconda"
        run: |
          conda config --prepend pkgs_dirs ~/conda/pkgs
          conda config --prepend envs_dirs ~/conda/envs

          conda config --set auto_update_conda False
          conda config --prepend channels "$WSI_CONDA_CHANNEL"
          conda config --append channels conda-forge
          conda info

      - name: "Install iRODS clients"
        run: |
          conda create -qy -n "$CONDA_ENV"
          conda install -qy -n "$CONDA_ENV" "irods-icommands ==${{ matrix.irods }}"
          conda install -qy -n "$CONDA_ENV" "baton ==${{ matrix.baton }}"
          conda install -qy -n "$CONDA_ENV" "libhts-plugins ==${{ matrix.plugins }}"
          conda install -qy -n "$CONDA_ENV" samtools
          conda install -qy -n "$CONDA_ENV" tears

      - name: "Configure iRODS clients"
        run: |
          conda activate "$CONDA_ENV"

          mkdir -p "$HOME/.irods"
          cat <<'EOF' > "$HOME/.irods/irods_environment.json"
          {
              "irods_host": "localhost",
              "irods_port": 1247,
              "irods_user_name": "irods",
              "irods_zone_name": "testZone",
              "irods_home": "/testZone/home/irods",
              "irods_default_resource": "testResc"
          }
          EOF

          echo "irods" | script -q -c "iinit" /dev/null
          ienv
          ils

          baton-do --version

      - name: "Cache Perl"
        id: cache-perl
        uses: actions/cache@v2
        with:
          path: ${{ env.PERL_CACHE }}
          key: ${{ runner.os }}-${{ matrix.perl }}-perl

      - name: "Install Perlbrew"
        if: steps.cache-perl.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://install.perlbrew.pl -o perlbrew.sh
          sha256sum -c .github/workflows/perlbrew.sha256
          export PERLBREW_ROOT=${{ env.PERL_CACHE }}
          sh perlbrew.sh

          source ${{ env.PERL_CACHE }}/etc/bashrc
          perlbrew available
          perlbrew install --notest perl-${{ matrix.perl }}
          perlbrew use perl-${{ matrix.perl }}
          perlbrew install-cpanm

      - name: "Initialize Perlbrew"
        run: |
          echo "source ${{ env.PERL_CACHE }}/etc/bashrc" >> "$HOME/.bash_profile"

      - name: "Install CPAN dependencies"
        run: |
          cpanm --local-lib=${{ env.PERL_CACHE }} local::lib && \
            eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib)

          ./scripts/install_wsi_dependencies.sh
          cpanm --installdeps --notest . || cat ~/.cpanm/work/*/build.log

      - name: "Run tests"
        run: |
          conda activate "$CONDA_ENV"
          cpanm --local-lib=${{ env.PERL_CACHE }} local::lib && \
            eval $(perl -I ${{ env.PERL_CACHE }}/lib/perl5/ -Mlocal::lib)
          export PERL5LIB="$PWD:$PERL5LIB"

          perl Build.PL

          conda list

          export TEST_AUTHOR=1
          export WTSI_NPG_iRODS_Test_irodsEnvFile=NULL
          export WTSI_NPG_iRODS_Test_IRODS_ENVIRONMENT_FILE="$HOME/.irods/irods_environment.json"
          ./Build test
